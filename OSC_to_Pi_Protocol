Need message types and formats for each of the different signals we are receiving from vezer. Need to decide on addresses, and the full scope of each 

OSC supports:
-OSC Values (continuous):
	{ address: '/valueTrack', args: [ { type: 'float', value: 0.5852534770965576 } ],oscType: 'message' } 
-OSC flag (boolean):

-OSC color (RGB): 
{ 	address: '/ colorTrack', 
	args: [ { type: 'integer', value: 172 }, 
	{ type: 'integer', value: 100 }, 
	{ type: 'integer', value: 150 } ], 
	oscType: 'message' }


Lights
Desired Controls:
	-Color
	-Specific petal/pistil
Message Type: Color 

Message format:

`address` determines which rod and the effect controlled.
	-"/light/petal/color/all"
	-"/light/petal/color/1"
	-"/light/petal/color/2"
	-"/light/petal/color/3"
	-"/light/petal/color/4"
	-"/light/petal/color/5"
	-"/light/petal/color/6"
	-"/light/petal/color/7"
	-"/light/petal/color/8"
	-"/light/pistil/color/all"
	-"/light/pistil/color/1"
	-"/light/pistil/color/2"
	-"/light/pistil/color/3"
	-"/light/flower/color/all"

`args`
three integer values corresponding to R, G, B.
	args: [ 
	{ type: 'integer', value: 172 }, 
	{ type: 'integer', value: 100 }, 
	{ type: 'integer', value: 150 }
	]

Desired visual behaviors:
	-Strobe
	-"Dance/flicker around"
	-Pass continuous colors
	-"Color wheel"/continuous alternating rainbow


Motor
Desired Controls:
	-Target position

Message format:
	Need to map position from a scale of 0-1 to the maximum bloom position in the motor (within safety tolerance). To prevent constantly updating motor, be sure to truncate the float to a certain sensitivity (~3 decimal places), compare against last value, and only update when changed.

`address` signifies that it's the motor
	-"/bloom/position"
	-"/bloom/speed"
	-"/bloom/accel"


`args`
just an integer value between 0 and 7420

args: [ { type: 'integer', value: 4608 } ]

Mist
Desired Controls:
	-On/Off

Message format:
	GPIO, sending 1 or 0.


