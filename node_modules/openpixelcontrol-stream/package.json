{
  "name": "openpixelcontrol-stream",
  "version": "0.1.2",
  "description": "provides a stream-implementation for interfacing with the openpixelcontrol-protocol",
  "main": "index.js",
  "directories": {
    "example": "examples",
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "expect.js": "^0.3.1",
    "mocha": "^2.2.1",
    "sinon": "^1.14.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "author": {
    "name": "Martin Schuhfuss",
    "email": "m.schuhfuss@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git@github.com:raspberry-node/node-openpixelcontrol.git"
  },
  "keywords": [
    "opc",
    "openpixelcontrol",
    "lighting"
  ],
  "bugs": {
    "url": "https://github.com/raspberry-node/node-openpixelcontrol/issues"
  },
  "homepage": "https://github.com/raspberry-node/node-openpixelcontrol",
  "readme": "# openpixelcontrol-stream ![build-status](https://api.travis-ci.org/raspberry-node/node-openpixelcontrol.svg)\n\nstream-based implementation of the [openpixelcontrol][]-protocol.\nProvides a protocol-parser and a client-implementation.\n\n## installation\n\n    npm install openpixelcontrol-stream\n\n## usage example\n\n### openpixelcontrol server\n\nThis will run an openpixelcontrol server on the default port (7890) and send\nreceived data to the `rpi-ws281x-native` module for output to a strip of\nws2812-leds.\n\n```javascript\nvar ParseStream = require('openpixelcontrol-stream').OpcParseStream,\n    net = require('net'),\n    ws281x = require('rpi-ws281x-native');\n\n\nvar server = net.createServer(function(conn) {\n    var parser = new ParseStream({\n        channel: 1,\n        dataFormat: ParseStream.DataFormat.UINT32_ARRAY\n    });\n\n    parser.on('setpixelcolors', function(data) {\n        ws281x.render(data);\n    });\n\n    conn.pipe(parser);\n});\n\nws281x.init(100);\nserver.listen(7890);\n```\n\n\n### openpixelcontrol client\n\nA basic client connecting to an openpixelcontrol-server and running an\nanimation there.\n\n```javascript\nvar ClientStream = require('openpixelcontrol-stream').OpcClientStream,\n    net = require('net');\n\nvar NUM_LEDS = 100,\n    OPC_CHANNEL = 0;\n\nvar client = new ClientStream();\n\n// connect to openpixelcontrol-server at `192.168.1.42:7890`\nvar socket = net.createConnection(7890, '192.168.1.42', function() {\n    client.pipe(socket);\n\n    run();\n});\n\nfunction run() {\n    // create a typed-array for color-data\n    var data = new Uint32Array(NUM_LEDS);\n\n    // setup an animation-loop at 10FPS\n    setInterval(function () {\n        // ... update colors in `data` ...\n\n        client.setPixelColors(OPC_CHANNEL, data);\n    }, 100);\n}\n\n```\n\n[openpixelcontrol]: http://openpixelcontrol.org/\n",
  "readmeFilename": "README.md",
  "_id": "openpixelcontrol-stream@0.1.2",
  "dist": {
    "shasum": "cc3a53107e92f3de6c3436c5f4d773e2ae047130"
  },
  "_from": "openpixelcontrol-stream@",
  "_resolved": "https://registry.npmjs.org/openpixelcontrol-stream/-/openpixelcontrol-stream-0.1.2.tgz"
}
